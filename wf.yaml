kind: Workflow
apiVersion: argoproj.io/v1alpha1
metadata:
  name: alb-az-down-1658828120
  namespace: hce
  labels:
    subject: alb-az-down_litmus
spec:
  templates:
    - name: custom-chaos
      steps:
        - - name: install-chaos-faults
            template: install-chaos-faults
        - - name: alb-az-down-1ap
            template: alb-az-down-1ap
        - - name: cleanup-chaos-resources
            template: cleanup-chaos-resources
    - name: install-chaos-faults
      inputs:
        artifacts:
          - name: alb-az-down-1ap
            path: /tmp/alb-az-down-1ap.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                description:
                  message: |
                    It injects AZ down chaos on alb for a certain chaos duration.
                kind: ChaosExperiment
                metadata:
                  name: alb-az-down
                  labels:
                    name: alb-az-down
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: ci
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: docker.io/chaosnative/chaos-go-runner:1.30.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name alb-az-down
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "30"
                      - name: RAMP_TIME
                        value: ""
                      - name: CHAOS_INTERVAL
                        value: "30"
                      - name: LOAD_BALANCER_ARN
                        value: ""
                      - name: REGION
                        value: ""
                      - name: SEQUENCE
                        value: parallel
                      - name: ZONES
                        value: ""
                      - name: AWS_SHARED_CREDENTIALS_FILE
                        value: /tmp/cloud_config.yml
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                    labels:
                      name: alb-az-down
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/version: ci
                    secrets:
                      - name: cloud-secret
                        mountPath: /tmp/
      container:
        name: ""
        image: docker.io/chaosnative/k8s:1.30.0
        command:
          - sh
          - "-c"
        args:
          - kubectl apply -f /tmp/ -n {{workflow.parameters.adminModeNamespace}} && sleep 30
    - name: alb-az-down-1ap
      inputs:
        artifacts:
          - name: alb-az-down-1ap
            path: /tmp/chaosengine-alb-az-down-1ap.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  generateName: alb-az-down-1ap
                  labels:
                    instance_id: 6c836c65-aaa8-44d6-8b83-9a481bb1c99f
                    context: alb-az-down-1ap_litmus
                    workflow_name: alb-az-down-1658828120
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: alb-az-down
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "30"
                            - name: CHAOS_INTERVAL
                              value: "30"
                            - name: LOAD_BALANCER_ARN
                              value: ""
                            - name: REGION
                              value: ""
                            - name: SEQUENCE
                              value: parallel
                            - name: ZONES
                              value: ""
                          experimentImagePullSecrets:
                            - name: test
                        probe:
                          - name: healthcheck
                            type: cmdProbe
                            mode: Edge
                            runProperties:
                              probeTimeout: 5s
                              retry: 0
                              interval: 1s
                              stopOnFailure: false
                            cmdProbe/inputs:
                              command: ./healthcheck -name aws-alb
                              source:
                                image: docker.io/chaosnative/chaos-go-runner:1.30.0
                                inheritInputs: true
                                imagePullSecrets:
                                  - name: test
                              comparator:
                                type: string
                                criteria: contains
                                value: "[P000]"
                  annotationCheck: "false"
                  components:
                    runner:
                      imagePullSecrets:
                        - name: test
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/chaosnative/litmus-checker:1.30.0
        command:
          - ./var/run/checker
        args:
          - "-file=/tmp/chaosengine-alb-az-down-1ap.yaml"
          - "-saveName=/tmp/engine-name"
    - name: cleanup-chaos-resources
      container:
        name: ""
        image: docker.io/chaosnative/k8s:1.30.0
        command:
          - sh
          - "-c"
        args:
          - "kubectl delete chaosengine -l 'instance_id in (6c836c65-aaa8-44d6-8b83-9a481bb1c99f, )' -n {{workflow.parameters.adminModeNamespace}} "
  entrypoint: custom-chaos
  arguments:
    parameters:
      - name: adminModeNamespace
        value: hce
  serviceAccountName: argo-chaos
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
  imagePullSecrets:
    - name: test
